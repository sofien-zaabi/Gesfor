/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * inscription.java
 *
 * Created on 20 févr. 2014, 14:53:57
 */

package graphique;
import com.lowagie.text.Document;
import com.lowagie.text.Font;
import com.lowagie.text.FontFactory;
import com.lowagie.text.Image;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.BaseFont;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.*;
import net.proteanit.sql.DbUtils ;

/**
 *
 * @author kalb
 */
public class inscription extends javax.swing.JFrame {
ResultSet rs,rs2 ;
Connection conn=connexion_bd.connexion();
    /** Creates new form inscription */
    public inscription() {
        initComponents();
        etudiant();
        update_incsrit();
        conn=connexion_bd.connexion();
        update_fco();
        update_fct();
       this.setTitle ("Gestionnaire d'inscriptions et de diplomes" );
       
    }
     private void imprime ()
    {
        try
        {
    Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Users\\zied_2\\Documents\\NetBeansProjects\\Gesfor\\dist\\fp.pdf");
        }
    catch(Exception e)
    {
      System.out.println(e.getMessage());
    }
    }
      private void imprimed ()
    {
        try
        {
    Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Users\\zied_2\\Documents\\NetBeansProjects\\Gesfor\\dist\\dip.pdf");
        }
    catch(Exception e)
    {
      System.out.println(e.getMessage());
    }
    }
    private void update_fco()
    {
          try{

	    		PreparedStatement pstmt1 = conn.prepareStatement("select distinct nom_formation from formation_co ");

          rs = pstmt1.executeQuery();
          String nomf="";
          while(rs.next())
          {
            String nf=rs.getString("nom_formation");
            nomf=nf;
            formation.addItem(nomf);
          }



	    }
	    	catch(Exception c){
	    		System.out.println(c.getMessage());

	    	}

    }
     private void update_fct()
    {
try{

	    		PreparedStatement pstmt1 = conn.prepareStatement("select distinct nom_formation from formation_ct ");

          rs = pstmt1.executeQuery();
          String nomf="";
          while(rs.next())
          {
            String nf=rs.getString("nom_formation");
            nomf=nf;
            formation.addItem(nomf);

              }
         


	    }
	    	catch(Exception c){
	    		System.out.println(c.getMessage());

	    	}
    }
    private void update_incsrit()
    {
        try{

	    		PreparedStatement pstmt1 = conn.prepareStatement("select * from inscription ");

          rs = pstmt1.executeQuery();

inscrit.setModel(DbUtils.resultSetToTableModel(rs));

	    }
	    	catch(Exception c){
	    		System.out.println(c.getMessage());

	    	}

    }
    private void etudiant()
    {
        try{
	      Class.forName("com.mysql.jdbc.Driver");
	      String dbUrl = "jdbc:mysql://localhost:3306/gesfor";
String user = "root", password = ""  ;


conn = DriverManager.getConnection(dbUrl, user, password);
	    		PreparedStatement pstmt1 = conn.prepareStatement("select cin_etudiant from etudiant");

          rs = pstmt1.executeQuery();

while(rs.next())
{
    int etud=rs.getInt("cin_etudiant");
    etudiant.addItem(etud);
}

	    }
	    	catch(Exception c){
	    		System.out.println(c.getMessage());

	    	}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typ = new javax.swing.JComboBox();
        montantp = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        inscrit = new javax.swing.JTable();
        etudiant = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        datei = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        formation = new javax.swing.JComboBox();
        niveau = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 255, 255));
        setMinimumSize(new java.awt.Dimension(1010, 700));
        setResizable(false);
        getContentPane().setLayout(null);

        typ.setFont(new java.awt.Font("Tahoma", 0, 14));
        typ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "     ", "FCT", "FCO" }));
        getContentPane().add(typ);
        typ.setBounds(820, 150, 160, 40);

        montantp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                montantpMouseClicked(evt);
            }
        });
        montantp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                montantpKeyTyped(evt);
            }
        });
        getContentPane().add(montantp);
        montantp.setBounds(820, 390, 160, 40);

        inscrit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        inscrit.setSelectionBackground(new java.awt.Color(0, 204, 255));
        jScrollPane1.setViewportView(inscrit);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 90, 690, 450);

        etudiant.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "     " }));
        getContentPane().add(etudiant);
        etudiant.setBounds(820, 330, 160, 40);

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/ajouter-crayon-icone-4828-32.png"))); // NOI18N
        jButton1.setText("créer inscription");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 580, 180, 40);

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/supprimer-icone-4878-32.png"))); // NOI18N
        jButton2.setText("désincrit");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(410, 580, 180, 40);

        datei.setDateFormatString("yyyy-MM-dd");
        getContentPane().add(datei);
        datei.setBounds(820, 450, 160, 40);

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/kedit-icone-8843-32.png"))); // NOI18N
        jButton3.setText("modifier inscription");
        getContentPane().add(jButton3);
        jButton3.setBounds(210, 580, 180, 40);

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/diplome-icone-9453-32.png"))); // NOI18N
        jButton5.setText(" diplome");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(610, 580, 180, 40);

        jButton6.setBackground(new java.awt.Color(204, 204, 255));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/icon_print.png"))); // NOI18N
        jButton6.setText("fiche paie");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(810, 580, 180, 40);

        formation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "      " }));
        getContentPane().add(formation);
        formation.setBounds(820, 210, 160, 40);

        niveau.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "       ", "niveau 1", "niveau 2", "niveau 3", "niveau 4", "professionel" }));
        getContentPane().add(niveau);
        niveau.setBounds(820, 270, 160, 40);

        jLabel2.setText("formation:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(720, 220, 80, 20);

        jLabel1.setText("type formation:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(720, 160, 100, 20);

        jLabel3.setText("niveau:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(720, 284, 80, 20);

        jLabel4.setText("cin_étudiant:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(720, 344, 90, 20);

        jLabel5.setText("montant:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(720, 404, 70, 20);

        jLabel6.setText("date inscription:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(720, 460, 100, 20);

        jLabel8.setBackground(new java.awt.Color(0, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/a_p.jpg"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(-340, -20, 1350, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void montantpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_montantpMouseClicked
 
    }//GEN-LAST:event_montantpMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
         Calendar cal=new GregorianCalendar() ;
        int Y=cal.get(Calendar.YEAR);
  int M=cal.get(Calendar.MONTH);
  int d=cal.get(Calendar.DAY_OF_MONTH);
  String datecurrent=Y+"-"+(M+1)+"-"+d ;
        String typf=typ.getSelectedItem().toString();
        String nomf=formation.getSelectedItem().toString();
        String niv=niveau.getSelectedItem().toString();
        int cine=Integer.parseInt(etudiant.getSelectedItem().toString());
        int montp=Integer.parseInt(montantp.getText());
        String date=((JTextField)datei.getDateEditor().getUiComponent()).getText();
        int mr=0;
        try{
        if(typf.equals("FCT"))
        {

           PreparedStatement pstmt1 = conn.prepareStatement("select nb_heures, prix_heure from formation_ct where nom_formation='"+nomf+"' and niveau='"+niv+"' and date_fin>'"+datecurrent+"'");

          rs = pstmt1.executeQuery();
          int total=0;
         if (rs.next())
          {
              int nbh=rs.getInt("nb_heures");
               int ph=rs.getInt("prix_heure");
               total=nbh*ph;
               mr=total-montp;
                PreparedStatement pstmt2 = conn.prepareStatement("select  cin_etudiant,type_formation,formation,niveau from inscription where cin_etudiant='"+cine+"' and type_formation='"+typf+"' and formation='"+nomf+"' and niveau='"+niv+"' ");
         rs2=pstmt2.executeQuery();
         if (rs2.next())
         {
           JOptionPane.showMessageDialog(null,"inscription déja enregistrée");
         }
         else
         {
        PreparedStatement pstm1=conn.prepareStatement("insert into inscription (type_formation,formation,niveau,cin_etudiant,montant_payer, montant_reste,date_inscription)values(?,?,?,?,?,?,?)");

pstm1.setString(1,typf);
pstm1.setString(2,nomf);
pstm1.setString(3,niv);
pstm1.setInt(4,cine);
pstm1.setInt(5,montp);
pstm1.setInt(6,mr);
pstm1.setString(7,date);
        int result=pstm1.executeUpdate();
            JOptionPane.showMessageDialog(null,"inscription enregistrer");
         }
          }
          else
          {
           JOptionPane.showMessageDialog(null,"formation terminé n'existe pas");
          }
            }


        else if(typf.equals("FCO"))
        {

           PreparedStatement pstmt1 = conn.prepareStatement("select  prix_par_mois from formation_co where nom_formation='"+nomf+"' and niveau='"+niv+"' and date_fin>'"+datecurrent+"'");

          rs = pstmt1.executeQuery();

          if (rs.next())
          {

               int pm=rs.getInt("prix_par_mois");

               mr=pm-montp;
                PreparedStatement pstmt2 = conn.prepareStatement("select  cin_etudiant,type_formation,formation,niveau from inscription where cin_etudiant='"+cine+"' and type_formation='"+typf+"' and formation='"+nomf+"' and niveau='"+niv+"'");
         rs2=pstmt2.executeQuery();
         if (rs2.next())
         {
           JOptionPane.showMessageDialog(null,"inscription déja enregistrée");
         }
         else
         {
        PreparedStatement pstm1=conn.prepareStatement("insert into inscription (type_formation,formation,niveau,cin_etudiant,montant_payer, montant_reste,date_inscription)values(?,?,?,?,?,?,?)");

pstm1.setString(1,typf);
pstm1.setString(2,nomf);
pstm1.setString(3,niv);
pstm1.setInt(4,cine);
pstm1.setInt(5,montp);
pstm1.setInt(6,mr);
pstm1.setString(7,date);
        int result=pstm1.executeUpdate();
            JOptionPane.showMessageDialog(null,"inscription enregistrer");
         }
          }
          else
          {
           JOptionPane.showMessageDialog(null,"formation terminé ou n'existe pas");
          }
           }
        

        }
            catch(Exception e)
            {
        
            }
        update_incsrit();

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        int c=JOptionPane.showConfirmDialog(null,"tu veux supprimer"," supprime",JOptionPane.YES_NO_OPTION);
        if(c==0){
         try{
              int row=inscrit.getSelectedRow();
 String ID=(inscrit.getModel().getValueAt(row, 0).toString());
           int idi ;
           idi=Integer.parseInt(ID);


        PreparedStatement pstmt1 = conn.prepareStatement("delete from  inscription   where id_inscription= '"+idi+"' ");




         int resultat = pstmt1.executeUpdate();


	    		 JOptionPane.showMessageDialog(null,"désinscription");




	    }
	    	catch(Exception e){
	    		System.out.println(e.getMessage());

	    	}}
         update_incsrit ();

    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        Font Header3 =FontFactory.getFont("Arial",BaseFont.IDENTITY_H,9,Font.NORMAL);
     Document document = new Document();
     String NomFichierPDF = "fp.pdf";

            try
      {
      PdfWriter.getInstance(document,new FileOutputStream(NomFichierPDF)).setInitialLeading(13f);
      document.open();
      Calendar cal=new GregorianCalendar() ;
      int Y=cal.get(Calendar.YEAR);
  int M=cal.get(Calendar.MONTH);
  int d=cal.get(Calendar.DAY_OF_MONTH);
  String datecurrent=Y+"-"+(M+1)+"-"+d ;
Image image=Image.getInstance("log.jpg");
      document.add(image);
      document.add(new Paragraph("                                                                                                    "));
      document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                         Fiche de paie étudiant"));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                     "+datecurrent+"                "));
document.add(new Paragraph("                                                                        "));

      PdfPTable Table = new PdfPTable(2);

      Table.setWidthPercentage(70f);

      Table.setWidths(new int []{50,50});
       int row=inscrit.getSelectedRow();

           int id=Integer.parseInt(inscrit.getModel().getValueAt(row, 0).toString()) ;
           String typf=(inscrit.getModel().getValueAt(row, 1).toString());
String form=(inscrit.getModel().getValueAt(row, 2).toString());
String nive=(inscrit.getModel().getValueAt(row, 3).toString());
int cinetud=Integer.parseInt(inscrit.getModel().getValueAt(row, 4).toString());
int mp=Integer.parseInt(inscrit.getModel().getValueAt(row, 5).toString());
int mr=Integer.parseInt(inscrit.getModel().getValueAt(row, 6).toString());
String date=(inscrit.getModel().getValueAt(row, 7).toString());


	    		PreparedStatement pstmt1 = conn.prepareStatement("select * from etudiant where cin_etudiant= '"+cinetud+"' ");

          rs = pstmt1.executeQuery();

String nome="";
String prene="";

if (rs.next())
{
   String nom=rs.getString("nom");
   nome=nom;
  String prenome=rs.getString("prenom");
  prene=prenome;
}



     Table.addCell("N° d'inscription:");
      Table.addCell(Integer.toString(id));
      Table.addCell("Cin Etudiant:");
      Table.addCell(Integer.toString(cinetud));
      Table.addCell("Nom:");
      Table.addCell(nome);
      Table.addCell("Prénom:");
      Table.addCell(prene);
      Table.addCell("Formation:");
      Table.addCell(form);
      Table.addCell("Niveau:");
      Table.addCell(nive);
      Table.addCell("Montant payé:");
      Table.addCell(Integer.toString(mp));
      Table.addCell("Montant restant:");
      Table.addCell(Integer.toString(mp));
      Table.addCell("Date de paie:");
      Table.addCell(date);



      document.add(Table);

document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("Centre de la formation professionnel                                           Signature Directrice "));
document.add(new Paragraph("Avenue 14 Janvier Rue Ahmed Aloulou                                                                 "));
document.add(new Paragraph("Imm. Ragheb étage. 2 App. 4 -Sfax                                                                                                   "));

document.close();

imprime();
      }catch(Exception e)
      {
      System.out.println(e.getMessage());
      }

    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        
          Font Header3 =FontFactory.getFont("Arial",BaseFont.IDENTITY_H,14,Font.NORMAL,Color.LIGHT_GRAY);
     Document document = new Document(PageSize.A4);
     String NomFichierPDF = "dip.pdf";

            try
      {
      PdfWriter.getInstance(document,new FileOutputStream(NomFichierPDF)).setInitialLeading(13f);
      document.open();
      Calendar cal=new GregorianCalendar() ;
      int Y=cal.get(Calendar.YEAR);
  int M=cal.get(Calendar.MONTH);
  int d=cal.get(Calendar.DAY_OF_MONTH);

  String mm="";
  if (M==1)
  {
   mm="Février";
  }
  else if (M==2)
  {
   mm="Mars" ;
  }
  else if (M==3)
  {
  mm="Avril";
  }
  else if (M==4)
  {
    mm="Mai" ;
  }
  else if (M==5)
  {
     mm="Juin";
  }
  else if (M==6)
  {
     mm="Juillet" ;
  }
   else if (M==7)
  {
     mm= "Aout";
  }
   else if (M==8)
  {
     mm="Séptembre";
  }
   else if (M==9)
  {
     mm= "Octobre";
  }
   else if (M==10)
  {
     mm= "Novembre";
  }
   else if (M==11)
  {
     mm="Décembre" ;
  }
   else if (M==12)
  {
     mm="Janvier";
  }
  String datecurrent=Y+"-"+(M+1)+"-"+d ;
Image image=Image.getInstance("dp.jpg");
image.setAbsolutePosition(0, 0);
      document.add(image);
      document.add(new Paragraph("                                                                                                    "));
      document.add(new Paragraph("                                                                                                    "));

       int row=inscrit.getSelectedRow();

           int id=Integer.parseInt(inscrit.getModel().getValueAt(row, 0).toString()) ;
           String typf=(inscrit.getModel().getValueAt(row, 1).toString());
String form=(inscrit.getModel().getValueAt(row, 2).toString());
String nive=(inscrit.getModel().getValueAt(row, 3).toString());
int cinetud=Integer.parseInt(inscrit.getModel().getValueAt(row, 4).toString());
String typp="";
if (typf.equals("FCT"))
{
 typp="courte terme";
}
else if (typf.equals("FCO"))
{
    typp="continue";
}
PreparedStatement pstmt1 = conn.prepareStatement("select * from etudiant where cin_etudiant= '"+cinetud+"' ");

          rs = pstmt1.executeQuery();

String nome="";
String prene="";

if (rs.next())
{
   String nom=rs.getString("nom");
   nome=nom;
  String prenome=rs.getString("prenom");
  prene=prenome;
}
PreparedStatement pstmt2 = conn.prepareStatement("select * from diplome  where cin_etudiant= '"+cinetud+"' and type_formation='"+typf+"' and nom_formation='"+form+"' and niveau='"+nive+"' ");

          rs = pstmt2.executeQuery();
          if (rs.next())
          {

          }
          else
          {
           PreparedStatement pstmt3 = conn.prepareStatement("insert into diplome   (cin_etudiant,type_formation,nom_formation,niveau,date_obtention) values(?,?,?,?,?) ");


         pstmt3.setInt(1,cinetud);
              pstmt3.setString(2,typf);
pstmt3.setString(3,form);
pstmt3.setString(4,nive);
pstmt3.setString(5,datecurrent);
int resul = pstmt3.executeUpdate();
          }

document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("Nous, soussignés, Certiffions que :"));
document.add(new Paragraph("                            "+nome+" "+prene+"                                                       ",Header3));
document.add(new Paragraph("Titulaire du CIN n° "+cinetud+" a suivi la formation suivante :                                                 "));
document.add(new Paragraph("                            "+form+"("+nive+")                                                        ",Header3));
document.add(new Paragraph("Dans le cadre des cours de formation "+typp+".                                                                 "));
document.add(new Paragraph("                                                                                                    "));
document.add(new Paragraph("                                                                                                    "));

document.add(new Paragraph("          "+d+" "+mm+" "+Y+"                                                                                   "));

document.close();

imprimed();

      }catch(Exception e)
      {
      System.out.println(e.getMessage());
      }


    }//GEN-LAST:event_jButton5MouseClicked

    private void montantpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_montantpKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || c==KeyEvent.VK_PERIOD || c==KeyEvent.VK_BACK_SPACE ))
        {
          JOptionPane.showMessageDialog(null,"type non valide");   
        }

    }//GEN-LAST:event_montantpKeyTyped

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inscription().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser datei;
    private javax.swing.JComboBox etudiant;
    private javax.swing.JComboBox formation;
    private javax.swing.JTable inscrit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField montantp;
    private javax.swing.JComboBox niveau;
    private javax.swing.JComboBox typ;
    // End of variables declaration//GEN-END:variables

   

}
